@using Newtonsoft.Json
@model SurveyVM


<section class="survey-data">
    <div class="container">

        <h1>Survey Data</h1>

        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#overallAnalysisModal">
            Visa AI-respons
        </button>

        @if (Model.Data is not null)
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Question</th>
                        <th>Options</th>
                        <th>Response Text</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Data)
                    {
                        <tr>
                            <td>@item.QuestionId</td>
                            <td>@item.QuestionText</td>
                            <td>
                                <ul>
                                    @foreach (var option in item.OptionsCount)
                                    {
                                        <li>@option.Key: @option.Value</li>
                                    }
                                </ul>
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(item.ResponseText))
                                {
                                    <a href="#" data-toggle="modal" data-target="#responseModal-@item.QuestionId">View Response</a>
                                }
                                else
                                {
                                    <span>No response text</span>
                                }
                            </td>

                        </tr>
                    }
                </tbody>
            </table>

            <!-- Modals for Responses -->
            @foreach (var item in Model.Data)
            {
                if (!string.IsNullOrEmpty(item.ResponseText))
                {
                    <div class="modal fade" id="responseModal-@item.QuestionId" tabindex="-1" role="dialog" aria-labelledby="responseModalLabel-@item.QuestionId" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="responseModalLabel-@item.QuestionId">Response for Question @item.QuestionId</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <p>@item.ResponseText</p>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }

            <!-- Modals for Analysis -->
            @if (!string.IsNullOrEmpty(Model.OverallAnalysis))
            {
                <div class="modal fade" id="overallAnalysisModal" tabindex="-1" role="dialog" aria-labelledby="overallAnalysisModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="overallAnalysisModalLabel">Overall Analysis</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <p>@Html.Raw(Model.OverallAnalysis)</p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            }



            <div class="charts-container">
                @foreach (var item in Model.Data)
                {
                    <div class="chart-box">
                        <h2>@item.QuestionText</h2>
                        <canvas id="chart-@item.QuestionId"></canvas>
                        <hr class="chart-divider" />
                    </div>
                }
            </div>


        }
        else
        {
            <p>No survey data available.</p>
        }

    </div>
</section>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
        @foreach (var item in Model.Data!)
        {
            <text>
                                                        var ctx = document.getElementById('chart-@item.QuestionId').getContext('2d');
                var data = @Html.Raw(JsonConvert.SerializeObject(new
                    {
                        labels = item.OptionsCount.Keys.ToList(),
                        values = item.OptionsCount.Values.ToList()
                    }));

                new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: data.labels,
                        datasets: [{
                            data: data.values,
                            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#FF9F40', '#FFCD56', '#4BC0C0']
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'top',
                            },
                            tooltip: {
                                callbacks: {
                                    label: function (tooltipItem) {
                                        return tooltipItem.label + ': ' + tooltipItem.raw;
                                    }
                                }
                            }
                        }
                    }
                });
            </text>
        }
                                });
    </script>
}


